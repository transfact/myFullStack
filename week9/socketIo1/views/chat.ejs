<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>
    <title>채팅방</title>
    <style>
        .chatBox{
            background-color: skyblue;
            width: 500px;
            height: 500px;
            padding: 10px;
            overflow: auto;
        }
        span{
            padding: 5px;
        }
    </style>
</head>
<body>
    <div>채팅방</div>
    <div class="chatBox">
        <!-- <ul>

        </ul> -->
    </div>
    <form id = 'chat'>
        <select name="nicknames" id ='nicknames'>
        </select>
        <input type="text" id = 'user' placeholder="유저ID">
        <input type="text" id = 'message' placeholder="채팅내용"><br>
        <button>채팅</button>
        <button type="button" onclick="leave()">로그아웃</button>
    </form>



    <script>
        const chatForm = document.querySelector("#chat")
        const chatBox = document.querySelector(".chatBox")
        const ul = document.querySelector("ul")
        let myNickname= null
        //클라이언트 소켓 연결
        const socket = io();
        let chatRoom;
        //채팅방 생성
        while(!chatRoom){
            chatRoom = prompt("채팅방명 입력")
        }

        socket.emit("join", {name:chatRoom})
        console.log(socket)
        //사용브라우저 접속시 이벤트
        socket.on("create",(res)=>{
            const div = document.createElement('div')
            const br = document.createElement('br')
            div.textContent = res;
            div.style.color='gray'
            chatBox.appendChild(div)
            chatBox.appendChild(br)
        })

        //서버에서 보내주는 값 
        socket.on("chat2",(res)=>{
            console.log(res)    
            const div1 = document.createElement("div")
            const span = document.createElement("span")
            const namespan= document.createElement("span")
            
            
            namespan.textContent=res.user
            namespan.style.verticalAlign='top'
            namespan.style.fontSize='5px'
            namespan.style.color='gray'
            
            
            span.textContent=res.message+" "
            span.style.backgroundColor='white'
            span.style.borderRadius = "10%"
            div1.style.textAlign = 'left'
            // div1.style.marginBottom = '5px'
            div1.appendChild(span)
            div1.appendChild(namespan)
            chatBox.appendChild(div1)
        })
        socket.on("getId",(room_participants,nicknames)=>{
            console.log(room_participants)
            console.log(nicknames)
        })

        //폼 이벤트
        chatForm.addEventListener("submit",(event)=>{
            event.preventDefault()

            const user = chatForm.querySelector("#user")
            const message = chatForm.querySelector("#message")
            const div1 = document.createElement("div")
            const span = document.createElement("span")
            const namespan= document.createElement("span")
            span.textContent=message.value
            span.style.backgroundColor='yellow'
            span.style.borderRadius = "10%"

            namespan.textContent=user.value+" "
            namespan.style.verticalAlign='top'
            namespan.style.fontSize='5px'
            namespan.style.color='gray'

            // div1.style.marginBottom = '5px'
            const br = document.createElement('br')
            div1.style.textAlign = 'right'
            div1.appendChild(namespan)   
            div1.appendChild(span)
            chatBox.appendChild(div1)
            chatBox.appendChild(br)
            socket.emit("message2", user.value,message.value)
            message.value='';
        })
        
    
        
        function leave(){
            socket.emit("leave")
            location.reload()
        }

    </script>
</body>
</html>